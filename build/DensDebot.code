.globl	constructor
.public	constructor
.type	constructor, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
; Decode _root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: _root
; constructor DensDebot
GETGLOB 2
NEQINT 0
THROWIFNOT 100
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; ==
GETGLOB 2
EQUAL
THROWIFNOT 100
ACCEPT
; expValue
; end expValue
;; push identifier _root
DUP
; colValue
SETGLOB 14
; end colValue
DROP
; end constructor DensDebot
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	start
.public	start
.type	start, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function start
PUSHINT 0
PUSHSLICE x57656c636f6d6520746f207468652044654e53206465626f7421
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
PUSHINT 0
PUSHSLICE x506c656173652073656c65637420796f7572206f7074696f6e3a
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
PUSHSLICE x4f7074696f6e73
NEWC
STSLICE
ENDC
PUSHSLICE x417661696c61626c65206465626f7420616374696f6e73
NEWC
STSLICE
ENDC
PUSHINT 5
NEWDICT
PUSHSLICE x5265736f6c7665
NEWC
STSLICE
ENDC
PUSHSLICE x5265736f6c766520616e2061646472657373
NEWC
STSLICE
ENDC
PUSHINT 1415751383
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x526f6f74
NEWC
STSLICE
ENDC
PUSHSLICE x4f7065726174696e67207468652044654e5320726f6f74
NEWC
STSLICE
ENDC
PUSHINT 1073933237
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x4365727469666963617465
NEWC
STSLICE
ENDC
PUSHSLICE x576f726b696e67207769746820636572746966696361746573
NEWC
STSLICE
ENDC
PUSHINT 1739144429
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x41756374696f6e
NEWC
STSLICE
ENDC
PUSHSLICE x496e746572616374696f6e20776974682061756374696f6e73
NEWC
STSLICE
ENDC
PUSHINT 965704724
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 0
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 4
ROT
PUSHINT 32
DICTUSETB
PAIR
CALL $Menu_no_obj_select$
; end function start
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	start_internal
.type	start_internal, @function
; function start
PUSHINT 0
PUSHSLICE x57656c636f6d6520746f207468652044654e53206465626f7421
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
PUSHINT 0
PUSHSLICE x506c656173652073656c65637420796f7572206f7074696f6e3a
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
PUSHSLICE x4f7074696f6e73
NEWC
STSLICE
ENDC
PUSHSLICE x417661696c61626c65206465626f7420616374696f6e73
NEWC
STSLICE
ENDC
PUSHINT 5
NEWDICT
PUSHSLICE x5265736f6c7665
NEWC
STSLICE
ENDC
PUSHSLICE x5265736f6c766520616e2061646472657373
NEWC
STSLICE
ENDC
PUSHINT 1415751383
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x526f6f74
NEWC
STSLICE
ENDC
PUSHSLICE x4f7065726174696e67207468652044654e5320726f6f74
NEWC
STSLICE
ENDC
PUSHINT 1073933237
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x4365727469666963617465
NEWC
STSLICE
ENDC
PUSHSLICE x576f726b696e67207769746820636572746966696361746573
NEWC
STSLICE
ENDC
PUSHINT 1739144429
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x41756374696f6e
NEWC
STSLICE
ENDC
PUSHSLICE x496e746572616374696f6e20776974682061756374696f6e73
NEWC
STSLICE
ENDC
PUSHINT 965704724
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
NEWC
ENDC
PUSHINT 0
TUPLE 3
UNTUPLE 3
NEWC
PUSH S3
STREFR
PUSH S2
STREFR
PUSH S1
STUR 32
XCHG s3
BLKDROP 3
PUSHINT 4
ROT
PUSHINT 32
DICTUSETB
PAIR
CALL $Menu_no_obj_select$
; end function start

.globl	mi_Resolve
.public	mi_Resolve
.type	mi_Resolve, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode index
LDU 32
ENDS
;; param: index
; function mi_Resolve
;; push identifier index
DUP
;; >=
PUSHINT 0
GEQ
THROWIFNOT 100
PUSHINT 1606030737
PUSHSLICE x446f6d61696e206e616d653a
NEWC
STSLICE
ENDC
FALSE
CALL $Terminal_no_obj_inputStr$
DROP
; end function mi_Resolve
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	mi_Resolve_internal
.type	mi_Resolve_internal, @function
;; param: index
; function mi_Resolve
;; push identifier index
DUP
;; >=
PUSHINT 0
GEQ
THROWIFNOT 100
PUSHINT 1606030737
PUSHSLICE x446f6d61696e206e616d653a
NEWC
STSLICE
ENDC
FALSE
CALL $Terminal_no_obj_inputStr$
DROP
; end function mi_Resolve

.globl	mi_Resolve_1
.public	mi_Resolve_1
.type	mi_Resolve_1, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDREF
ENDS
;; param: value
; function mi_Resolve_1
;; push identifier value
DUP
;; decl: st
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x5265736f6c76696e6720
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; push identifier st
PUSH S3
CTOS
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
PUSHSLICE x2e2e2e
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
;; push identifier st
DUP
PUSHINT 4294967295
CDATASIZE
DROP
NIP
RSHIFT 3
;; decl: l
PUSHINT 0
;; decl: s
;; delete
; expValue
; end expValue
PUSHINT 0
NEWDICT
PAIR
; colValue
SETGLOB 15
; end colValue
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; <
	;; push identifier l
	PUSH S3
	LESS
}
PUSHCONT {
	;; if
	;; push identifier st
	PUSH S3
	;; push identifier i
	PUSH S1
	PUSHINT 1
	CALLREF {
		CALL $__substr_macro$
	}
	HASHCU
	PUSHSLICE x2f
	NEWC
	STSLICE
	ENDC
	HASHCU
	EQUAL
	PUSHCONT {
		; expValue
		;; fetch chain
		GETGLOB 15
		; end expValue
		;; push identifier st
		PUSH S4
		;; push identifier s
		PUSH S3
		;; push identifier i
		PUSH S3
		;; -
		;; push identifier s
		PUSH S5
		SUB
		UFITS 256
		CALLREF {
			CALL $__substr_macro$
		}
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETREF
		PAIR
		; colValue
		SETGLOB 15
		; end colValue
		; expValue
		; end expValue
		;; push identifier i
		DUP
		;; +
		PUSHINT 1
		ADD
		; colValue
		POP S2
		; end colValue
	}
	IF
	;; end if
	;; ++
	; expValue
	; end expValue
	INC
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
;; fetch chain
GETGLOB 15
; end expValue
;; push identifier st
PUSH S3
;; push identifier s
PUSH S2
;; push identifier l
PUSH S4
;; -
;; push identifier s
PUSH S4
SUB
UFITS 256
CALLREF {
	CALL $__substr_macro$
}
;; array.push(..)
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETREF
PAIR
; colValue
SETGLOB 15
; end colValue
; expValue
; end expValue
PUSHINT 0
; colValue
SETGLOB 17
; end colValue
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; expValue
; end expValue
; colValue
SETGLOB 16
; end colValue
CALL $goResolve_internal$
BLKDROP 4
; end function mi_Resolve_1
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	mi_Resolve_1_internal
.type	mi_Resolve_1_internal, @function
;; param: value
; function mi_Resolve_1
;; push identifier value
DUP
;; decl: st
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x5265736f6c76696e6720
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; push identifier st
PUSH S3
CTOS
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
PUSHSLICE x2e2e2e
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
;; push identifier st
DUP
PUSHINT 4294967295
CDATASIZE
DROP
NIP
RSHIFT 3
;; decl: l
PUSHINT 0
;; decl: s
;; delete
; expValue
; end expValue
PUSHINT 0
NEWDICT
PAIR
; colValue
SETGLOB 15
; end colValue
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; <
	;; push identifier l
	PUSH S3
	LESS
}
PUSHCONT {
	;; if
	;; push identifier st
	PUSH S3
	;; push identifier i
	PUSH S1
	PUSHINT 1
	CALLREF {
		CALL $__substr_macro$
	}
	HASHCU
	PUSHSLICE x2f
	NEWC
	STSLICE
	ENDC
	HASHCU
	EQUAL
	PUSHCONT {
		; expValue
		;; fetch chain
		GETGLOB 15
		; end expValue
		;; push identifier st
		PUSH S4
		;; push identifier s
		PUSH S3
		;; push identifier i
		PUSH S3
		;; -
		;; push identifier s
		PUSH S5
		SUB
		UFITS 256
		CALLREF {
			CALL $__substr_macro$
		}
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETREF
		PAIR
		; colValue
		SETGLOB 15
		; end colValue
		; expValue
		; end expValue
		;; push identifier i
		DUP
		;; +
		PUSHINT 1
		ADD
		; colValue
		POP S2
		; end colValue
	}
	IF
	;; end if
	;; ++
	; expValue
	; end expValue
	INC
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
;; fetch chain
GETGLOB 15
; end expValue
;; push identifier st
PUSH S3
;; push identifier s
PUSH S2
;; push identifier l
PUSH S4
;; -
;; push identifier s
PUSH S4
SUB
UFITS 256
CALLREF {
	CALL $__substr_macro$
}
;; array.push(..)
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETREF
PAIR
; colValue
SETGLOB 15
; end colValue
; expValue
; end expValue
PUSHINT 0
; colValue
SETGLOB 17
; end colValue
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; expValue
; end expValue
; colValue
SETGLOB 16
; end colValue
CALL $goResolve_internal$
BLKDROP 4
; end function mi_Resolve_1

.globl	goResolve_internal
.type	goResolve_internal, @function
; function goResolve
;; index
;; push identifier curr_i
GETGLOB 17
;; push identifier chain
GETGLOB 15
INDEX 1
PUSHINT 32
DICTUGETREF
THROWIFNOT 50
;; decl: part
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x4c6f6f6b757020
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; push identifier curr_p
GETGLOB 16
CALLREF {
	CALL $convertAddressToHexString_macro$
}
PUSHSLICE x2f
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; push identifier part
PUSH S3
CTOS
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
PUSHSLICE x2e2e2e
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
;; Remote call IDensRoot.resolveRPC
;; push identifier root
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x603b7e24
STSLICECONST x72c3768e
;; name
;; push identifier part
PUSH S1
STREFR
;; cert
;; push identifier curr_p
GETGLOB 16
STSLICER
;; ptype
PUSHINT 1
STUR 8
ENDC
PUSHINT 0
SENDRAWMSG
DROP
; end function goResolve

.globl	onResolve
.public	onResolve
.type	onResolve, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode res
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: res
; function onResolve
PUSHCONT {
	PUSHINT 0
	NEWC
	NULL
	TUPLE 2
	NEWC
	PUSHSLICE x476f74206164647265737320
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	CALLREF {
		CALL $appendToList_macro$
	}
	;; push identifier res
	PUSH S3
	CALLREF {
		CALL $convertAddressToHexString_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	CALL $Terminal_no_obj_print$
	;; if
	;; push identifier curr_i
	GETGLOB 17
	;; +
	PUSHINT 1
	ADD
	;; ==
	;; get member length
	;; push identifier chain
	GETGLOB 15
	INDEX 0
	EQUAL
	PUSHCONT {
		PUSHINT 0
		PUSHSLICE x52657175657374696e672076616c75652e2e2e
		NEWC
		STSLICE
		ENDC
		CALL $Terminal_no_obj_print$
		;; Remote call IDensCertificate.whois
		;; push identifier res
		DUP
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHSLICE x3989680000000000000000000000000004_
		STSLICER
		STSLICECONST 0
		STSLICECONST 0
		STSLICECONST x02979294
		STSLICECONST x55fa0e19
		ENDC
		PUSHINT 0
		SENDRAWMSG
		;; return
		DROP
		RET
	}
	IFJMP
	;; end if
	PUSHINT 1
	; expValue
	;; fetch curr_i
	GETGLOB 17
	; end expValue
	SWAP
	ADD
	; colValue
	SETGLOB 17
	; end colValue
	CALL $goResolve_internal$
	DROP
}
CALLX
; end function onResolve
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	onResolve_internal
.type	onResolve_internal, @function
;; param: res
; function onResolve
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x476f74206164647265737320
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; push identifier res
PUSH S3
CALLREF {
	CALL $convertAddressToHexString_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
;; if
;; push identifier curr_i
GETGLOB 17
;; +
PUSHINT 1
ADD
;; ==
;; get member length
;; push identifier chain
GETGLOB 15
INDEX 0
EQUAL
PUSHCONT {
	PUSHINT 0
	PUSHSLICE x52657175657374696e672076616c75652e2e2e
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
	;; Remote call IDensCertificate.whois
	;; push identifier res
	DUP
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x3989680000000000000000000000000004_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x02979294
	STSLICECONST x55fa0e19
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; return
	DROP
	RET
}
IFJMP
;; end if
PUSHINT 1
; expValue
;; fetch curr_i
GETGLOB 17
; end expValue
SWAP
ADD
; colValue
SETGLOB 17
; end colValue
CALL $goResolve_internal$
DROP
; end function onResolve

.globl	onResolveWhois
.public	onResolveWhois
.type	onResolveWhois, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode res
;; decode struct Whois res
;; decode Whois.name
LDREF
;; decode Whois.owner
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode Whois.parent
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode Whois.value
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode Whois.registered
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
;; decode Whois.expiry
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
;; build struct Whois ss:7
BLKSWAP 6, 1
TUPLE 6
SWAP
ENDS
;; param: res
; function onResolveWhois
PUSHINT 0
PUSHSLICE x526563656976656420696e666f726d6174696f6e3a
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x4f776e65723a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member owner
;; push identifier res
PUSH S3
INDEX 1
CALLREF {
	CALL $convertAddressToHexString_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x526567697374657265643a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; push identifier now
NOW
;; -
;; get member registered
;; push identifier res
PUSH S4
INDEX 4
SUB
UFITS 32
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
PUSHSLICE x732061676f
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x457870697265733a20696e20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member expiry
;; push identifier res
PUSH S3
INDEX 5
;; int256
;; -
;; push identifier now
NOW
;; int256
SUB
FITS 256
ABS
PUSHINT 0
FALSE
;; get member expiry
;; push identifier res
PUSH S6
INDEX 5
;; int256
;; -
;; push identifier now
NOW
;; int256
SUB
FITS 256
ISNEG
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
PUSHSLICE x73
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x416464726573732076616c756520287265717565737420726573756c74293a0a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member value
;; push identifier res
PUSH S3
INDEX 3
CALLREF {
	CALL $convertAddressToHexString_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
CALL $start_internal$
DROP
; end function onResolveWhois
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	onResolveWhois_internal
.type	onResolveWhois_internal, @function
;; param: res
; function onResolveWhois
PUSHINT 0
PUSHSLICE x526563656976656420696e666f726d6174696f6e3a
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x4f776e65723a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member owner
;; push identifier res
PUSH S3
INDEX 1
CALLREF {
	CALL $convertAddressToHexString_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x526567697374657265643a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; push identifier now
NOW
;; -
;; get member registered
;; push identifier res
PUSH S4
INDEX 4
SUB
UFITS 32
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
PUSHSLICE x732061676f
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x457870697265733a20696e20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member expiry
;; push identifier res
PUSH S3
INDEX 5
;; int256
;; -
;; push identifier now
NOW
;; int256
SUB
FITS 256
ABS
PUSHINT 0
FALSE
;; get member expiry
;; push identifier res
PUSH S6
INDEX 5
;; int256
;; -
;; push identifier now
NOW
;; int256
SUB
FITS 256
ISNEG
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
PUSHSLICE x73
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x416464726573732076616c756520287265717565737420726573756c74293a0a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member value
;; push identifier res
PUSH S3
INDEX 3
CALLREF {
	CALL $convertAddressToHexString_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
CALL $start_internal$
DROP
; end function onResolveWhois

.globl	mi_Root
.public	mi_Root
.type	mi_Root, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode index
LDU 32
ENDS
;; param: index
; function mi_Root
DROP
; end function mi_Root
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	mi_Root_internal
.type	mi_Root_internal, @function
;; param: index
; function mi_Root
DROP
; end function mi_Root

.globl	mi_Certificate
.public	mi_Certificate
.type	mi_Certificate, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode index
LDU 32
ENDS
;; param: index
; function mi_Certificate
DROP
; end function mi_Certificate
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	mi_Certificate_internal
.type	mi_Certificate_internal, @function
;; param: index
; function mi_Certificate
DROP
; end function mi_Certificate

.globl	mi_Auction
.public	mi_Auction
.type	mi_Auction, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode index
LDU 32
ENDS
;; param: index
; function mi_Auction
DROP
; end function mi_Auction
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	mi_Auction_internal
.type	mi_Auction_internal, @function
;; param: index
; function mi_Auction
DROP
; end function mi_Auction

.globl	getVersion
.public	getVersion
.type	getVersion, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function getVersion
;; ret param: name
NEWC
ENDC
;; ret param: semver
PUSHINT 0
PUSHSLICE x44654e53204465626f74
NEWC
STSLICE
ENDC
PUSHINT 0
PUSHINT 1
PUSHINT 0
;; param: major
;; param: minor
;; param: fix
; function _version
;; return
;; push identifier major
PUSH S2
;; <<
PUSHINT 16
LSHIFT
UFITS 24
;; |
;; push identifier minor
PUSH S2
;; <<
PUSHINT 8
LSHIFT
UFITS 24
OR
;; |
;; push identifier fix
PUSH S1
OR
XCHG s3
BLKDROP 3
; end function _version
SWAP
; expValue
; end expValue
; colValue
POP S3
; end colValue
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xb541576f
	PUSH S2
	STREFR
	PUSH S1
	STUR 24
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S2
	STREFR
	PUSH S1
	STUR 24
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP2
; end function getVersion
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getVersion_internal
.type	getVersion_internal, @function
; function getVersion
;; ret param: name
NEWC
ENDC
;; ret param: semver
PUSHINT 0
PUSHSLICE x44654e53204465626f74
NEWC
STSLICE
ENDC
PUSHINT 0
PUSHINT 1
PUSHINT 0
;; param: major
;; param: minor
;; param: fix
; function _version
;; return
;; push identifier major
PUSH S2
;; <<
PUSHINT 16
LSHIFT
UFITS 24
;; |
;; push identifier minor
PUSH S2
;; <<
PUSHINT 8
LSHIFT
UFITS 24
OR
;; |
;; push identifier fix
PUSH S1
OR
XCHG s3
BLKDROP 3
; end function _version
SWAP
; expValue
; end expValue
; colValue
POP S3
; end colValue
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
; end function getVersion

.globl	getDebotOptions
.public	getDebotOptions
.type	getDebotOptions, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function getDebotOptions
;; ret param: options
PUSHINT 0
;; ret param: debotAbi
NEWC
ENDC
;; ret param: targetAbi
NEWC
ENDC
;; ret param: targetAddr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; push identifier m_debotAbi
GETGLOB 11
ISNULL
NOT
PUSHCONT {
	;; push identifier m_debotAbi
	GETGLOB 11
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	NEWC
	ENDC
}
IFELSE
; expValue
; end expValue
; colValue
POP S3
; end colValue
;; push identifier m_targetAbi
GETGLOB 12
ISNULL
NOT
PUSHCONT {
	;; push identifier m_targetAbi
	GETGLOB 12
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	NEWC
	ENDC
}
IFELSE
; expValue
; end expValue
; colValue
POP S2
; end colValue
;; push identifier m_target
GETGLOB 13
ISNULL
NOT
PUSHCONT {
	;; push identifier m_target
	GETGLOB 13
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
}
IFELSE
; expValue
; end expValue
; colValue
NIP
; end colValue
; expValue
; end expValue
;; push identifier m_options
GETGLOB 10
; colValue
POP S4
; end colValue
;; returning named params
;; emitting 4 value(s)
PUSH S4
EQINT -1
PUSHCONT {
	PUSH S6
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xfdecd0db
	PUSH S4
	STUR 8
	PUSH S3
	STREFR
	PUSH S2
	STREFR
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S4
	STUR 8
	PUSH S3
	STREFR
	PUSH S2
	STREFR
	PUSH S1
	STSLICER
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
BLKDROP 4
; end function getDebotOptions
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getDebotOptions_internal
.type	getDebotOptions_internal, @function
; function getDebotOptions
;; ret param: options
PUSHINT 0
;; ret param: debotAbi
NEWC
ENDC
;; ret param: targetAbi
NEWC
ENDC
;; ret param: targetAddr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; push identifier m_debotAbi
GETGLOB 11
ISNULL
NOT
PUSHCONT {
	;; push identifier m_debotAbi
	GETGLOB 11
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	NEWC
	ENDC
}
IFELSE
; expValue
; end expValue
; colValue
POP S3
; end colValue
;; push identifier m_targetAbi
GETGLOB 12
ISNULL
NOT
PUSHCONT {
	;; push identifier m_targetAbi
	GETGLOB 12
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	NEWC
	ENDC
}
IFELSE
; expValue
; end expValue
; colValue
POP S2
; end colValue
;; push identifier m_target
GETGLOB 13
ISNULL
NOT
PUSHCONT {
	;; push identifier m_target
	GETGLOB 13
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
}
IFELSE
; expValue
; end expValue
; colValue
NIP
; end colValue
; expValue
; end expValue
;; push identifier m_options
GETGLOB 10
; colValue
POP S4
; end colValue
;; returning named params
; end function getDebotOptions

.globl	setABI
.public	setABI
.type	setABI, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode dabi
LDREF
ENDS
;; param: dabi
; function setABI
GETGLOB 2
;; ==
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
EQUAL
THROWIFNOT 100
ACCEPT
PUSHINT 1
; expValue
;; fetch m_options
GETGLOB 10
; end expValue
SWAP
OR
; colValue
SETGLOB 10
; end colValue
; expValue
; end expValue
;; push identifier dabi
DUP
; colValue
SETGLOB 11
; end colValue
DROP
; end function setABI
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setABI_internal
.type	setABI_internal, @function
;; param: dabi
; function setABI
GETGLOB 2
;; ==
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
EQUAL
THROWIFNOT 100
ACCEPT
PUSHINT 1
; expValue
;; fetch m_options
GETGLOB 10
; end expValue
SWAP
OR
; colValue
SETGLOB 10
; end colValue
; expValue
; end expValue
;; push identifier dabi
DUP
; colValue
SETGLOB 11
; end colValue
DROP
; end function setABI

.macro c7_to_c4
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
GETGLOB 15
UNTUPLE 2
GETGLOB 17
REVERSE 4, 0
STU 32
STDICT
STU 256
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 14
GETGLOB 16
REVERSE 8, 0
STBREF
STU 8
SWAP
DUP
ISNULL
NOT
PUSHCONT {
	NEWC
	STREF
	SWAP
	STSLICECONST 1
	STBREF
}
PUSHCONT {
	DROP
	STSLICECONST 0
}
IFELSE
SWAP
DUP
ISNULL
NOT
PUSHCONT {
	NEWC
	STREF
	SWAP
	STSLICECONST 1
	STBREF
}
PUSHCONT {
	DROP
	STSLICECONST 0
}
IFELSE
SWAP
DUP
ISNULL
NOT
PUSHCONT {
	NEWC
	STSLICE
	SWAP
	STSLICECONST 1
	STBREF
}
PUSHCONT {
	DROP
	STSLICECONST 0
}
IFELSE
STSLICE
STSLICE
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDU 32
LDDICT
ROTREV
PAIR
SETGLOB 15
PLDU 256
SETGLOB 17
LDU 8
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	PLDREF
}
IFNOT
SETGLOB 11
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	PLDREF
}
IFNOT
SETGLOB 12
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	LDMSGADDR
	DROP
}
IFNOT
SETGLOB 13
LDMSGADDR
SETGLOB 16
SETGLOB 14
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SETGLOB 15
	PLDU 256
	SETGLOB 17
	LDU 8
	LDOPTREF
	SWAP
	DUP
	ISNULL
	PUSHCONT {
		CTOS
		PLDREF
	}
	IFNOT
	SETGLOB 11
	LDOPTREF
	SWAP
	DUP
	ISNULL
	PUSHCONT {
		CTOS
		PLDREF
	}
	IFNOT
	SETGLOB 12
	LDOPTREF
	SWAP
	DUP
	ISNULL
	PUSHCONT {
		CTOS
		LDMSGADDR
		DROP
	}
	IFNOT
	SETGLOB 13
	LDMSGADDR
	SETGLOB 16
	SETGLOB 14
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init m_options
	PUSHINT 0
	SETGLOB 10
	; init m_debotAbi
	NULL
	SETGLOB 11
	; init m_targetAbi
	NULL
	SETGLOB 12
	; init m_target
	NULL
	SETGLOB 13
	; init root
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 14
	; init chain
	PUSHINT 0
	NEWDICT
	PAIR
	SETGLOB 15
	; init curr_p
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 16
	; init curr_i
	PUSHINT 0
	SETGLOB 17
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal,        0
.internal	:main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
PLDU 4
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
PUSH S1 ; funcId body' funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

.internal-alias :main_external,        -1
.internal	:main_external
PUSHINT -1 ; main_external trans id
PUSH S1
CALL $c4_to_c7_with_init_storage$
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice havePubkey
	PUSHCONT {
		LDU 256       ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG s3
		SWAP
	}
	PUSHCONT {
		XCHG s2
		GETGLOB 2
	}
	IFELSE
	DUP
	SETGLOB 5
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1      ; havePubkey msgSlice
	SWAP       ; msgSlice havePubkey
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
PUSH S1 ; funcId body funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

.globl	Menu_with_obj_select
.type	Menu_with_obj_select, @function
;; param: title
;; param: description
;; param: items
; function select
;; address.makeAddrStd()
PUSHSLICE x9c358349a7d9d4465c92f07be94475030479b94640bb8b19a4189b64b384ac0b691_
;; decl: addr
;; Remote call IMenu.select
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x69814639
;; title
;; push identifier title
PUSH S4
STREFR
;; description
;; push identifier description
PUSH S3
STREFR
;; items
;; push identifier items
PUSH S2
UNPAIR
XCHG s2
STU 32
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
BLKDROP 3
; end function select

.globl	Menu_no_obj_select
.type	Menu_no_obj_select, @function
;; param: title
;; param: description
;; param: items
; function select
;; address.makeAddrStd()
PUSHSLICE x9c358349a7d9d4465c92f07be94475030479b94640bb8b19a4189b64b384ac0b691_
;; decl: addr
;; Remote call IMenu.select
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x69814639
;; title
;; push identifier title
PUSH S4
STREFR
;; description
;; push identifier description
PUSH S3
STREFR
;; items
;; push identifier items
PUSH S2
UNPAIR
XCHG s2
STU 32
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
BLKDROP 4
; end function select

.globl	Terminal_with_obj_inputStr
.type	Terminal_with_obj_inputStr, @function
;; param: answerId
;; param: prompt
;; param: multiline
; function inputStr
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.inputStr
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x0902c664
;; answerId
;; push identifier answerId
PUSH S4
STUR 32
;; prompt
;; push identifier prompt
PUSH S3
STREFR
;; multiline
;; push identifier multiline
PUSH S2
STIR 1
ENDC
PUSHINT 0
SENDRAWMSG
BLKDROP 3
; end function inputStr

.globl	Terminal_no_obj_inputStr
.type	Terminal_no_obj_inputStr, @function
;; param: answerId
;; param: prompt
;; param: multiline
; function inputStr
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.inputStr
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x0902c664
;; answerId
;; push identifier answerId
PUSH S4
STUR 32
;; prompt
;; push identifier prompt
PUSH S3
STREFR
;; multiline
;; push identifier multiline
PUSH S2
STIR 1
ENDC
PUSHINT 0
SENDRAWMSG
BLKDROP 4
; end function inputStr

.globl	Terminal_with_obj_print
.type	Terminal_with_obj_print, @function
;; param: answerId
;; param: message
; function print
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.print
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x0ce649c2
;; answerId
;; push identifier answerId
PUSH S3
STUR 32
;; message
;; push identifier message
PUSH S2
STREFR
ENDC
PUSHINT 0
SENDRAWMSG
DROP2
; end function print

.globl	Terminal_no_obj_print
.type	Terminal_no_obj_print, @function
;; param: answerId
;; param: message
; function print
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.print
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x0ce649c2
;; answerId
;; push identifier answerId
PUSH S3
STUR 32
;; message
;; push identifier message
PUSH S2
STREFR
ENDC
PUSHINT 0
SENDRAWMSG
BLKDROP 3
; end function print

