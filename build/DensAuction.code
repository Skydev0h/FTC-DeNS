.macro constructor
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
ENDS
; constructor DensAuction
; end constructor DensAuction
THROW 199

.macro receive_macro
; function receive
; end function receive
THROW 192

.macro fallback_macro
; function fallback
; end function fallback
THROW 191

.macro addBalance
DROP
; Decode input parameters
ENDS
; function addBalance
;; emit balanceAdded
PUSHSLICE xc00000000000000000000000002a1cc7aa
NEWC
STSLICE
;; donor
;; get member sender
GETGLOB 9
STSLICER
;; value
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
STUR 128
ENDC
PUSHINT 0
SENDRAWMSG
; end function addBalance
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
;; param: data
; function onCodeUpgrade
;; set default state vars
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 10
PUSHREF {
}
SETGLOB 11
PUSHINT 0
SETGLOB 12
PUSHINT 0
SETGLOB 13
PUSHINT 0
SETGLOB 14
PUSHINT 0
SETGLOB 15
PUSHINT 0
SETGLOB 16
PUSHINT 0
SETGLOB 17
PUSHREF {
}
SETGLOB 18
PUSHINT 0
SETGLOB 19
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 20
PUSHINT 0
SETGLOB 21
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 22
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 23
PUSHINT 0
SETGLOB 24
;; end set default state vars
;; push identifier data
DUP
CTOS
;; decl: s
; expValue
DUP
; end expValue
;; decode address
LDMSGADDR
;; decode string
LDREF
; colValue
POP S3
; end colValue
SWAP
; expValue
; end expValue
; colValue
SETGLOB 10
; end colValue
; expValue
; end expValue
; colValue
SETGLOB 11
; end colValue
; expValue
; end expValue
PUSHINT 0
; colValue
SETGLOB 12
; end colValue
; expValue
; end expValue
PUSHINT 0
; colValue
SETGLOB 13
; end colValue
; expValue
; end expValue
PUSHINT 0
; colValue
SETGLOB 14
; end colValue
; expValue
; end expValue
PUSHINT 0
; colValue
SETGLOB 15
; end colValue
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; expValue
; end expValue
; colValue
SETGLOB 20
; end colValue
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; expValue
; end expValue
; colValue
SETGLOB 23
; end colValue
; expValue
; end expValue
PUSHINT 0
; colValue
SETGLOB 21
; end colValue
; expValue
; end expValue
PUSHINT 0
; colValue
SETGLOB 24
; end colValue
; expValue
; end expValue
FALSE
; colValue
SETGLOB 19
; end colValue
; expValue
; end expValue
PUSHINT 0
; colValue
SETGLOB 17
; end colValue
;; emit deployed
PUSHSLICE xc00000000000000000000000002238c767
NEWC
STSLICE
;; root
;; push identifier root
GETGLOB 10
STSLICER
;; name
;; push identifier name
GETGLOB 11
STREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function onCodeUpgrade
DROP2
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.macro installBidCode
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode code
;; decode TvmCell
LDREF
ENDS
;; param: code
; modifier onlyRoot
;; get member sender
GETGLOB 9
;; push identifier root
GETGLOB 10
SDEQ
THROWIFNOT 99
; function installBidCode
;; push identifier bid_code_fuse
GETGLOB 19
;; ==
FALSE
EQUAL
THROWIFNOT 115
; expValue
; end expValue
TRUE
; colValue
SETGLOB 19
; end colValue
; expValue
; end expValue
;; push identifier code
; colValue
; end colValue
; end function installBidCode
; end modifier onlyRoot
SETGLOB 18
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro inquiryRequest
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
; Decode rhash
LDUQ 128
PUSHREFCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode _expiry
LDUQ 32
PUSHREFCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
ENDS
;; param: rhash
;; param: _expiry
;; ret param: retParam@0
;; ret param: retParam@1
;; ret param: retParam@2
PUSHINT 0
BLKPUSH 2, 0
; modifier onlyRoot
;; get member sender
GETGLOB 9
;; push identifier root
GETGLOB 10
SDEQ
THROWIFNOT 99
; function inquiryRequest
;; return
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
TRUE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
;; push identifier rhash
PUSH S4
;; push identifier endBid
GETGLOB 13
EQINT 0
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	;; push identifier now
	NOW
	;; <
	;; push identifier endBid
	GETGLOB 13
	LESS
}
IFNOT
;; push identifier _expiry
PUSH S5
; end function inquiryRequest
; end modifier onlyRoot
BLKDROP2 5, 3
;; emitting 3 value(s)
PUSH S3
EQINT -1
PUSHCONT {
	PUSH S5
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x0000000000000000000000003953b8552_
	STSLICER
	PUSH S3
	STUR 128
	PUSH S2
	STIR 1
	PUSH S1
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S3
	STUR 128
	PUSH S2
	STIR 1
	PUSH S1
	STUR 32
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
BLKDROP 3
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro participateProxy
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
; Decode rpr
;; decode struct RegPartReq rpr
;; decode RegPartReq.sender
LDMSGADDRQ
PUSHREFCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode RegPartReq.duration
LDUQ 32
PUSHREFCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
;; decode RegPartReq.hash
LDUQ 256
PUSHREFCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; build struct RegPartReq ss:4
BLKSWAP 3, 1
TUPLE 3
SWAP
; Decode rhash
LDUQ 128
PUSHREFCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode _expiry
LDUQ 32
PUSHREFCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
ENDS
;; param: rpr
;; param: rhash
;; param: _expiry
;; ret param: retParam@0
PUSHINT 0
;; ret param: retParam@1
PUSHINT 0
; modifier onlyRoot
;; get member sender
GETGLOB 9
;; push identifier root
GETGLOB 10
SDEQ
THROWIFNOT 99
; function participateProxy
;; get member balance
GETPARAM 7
INDEX 0
;; -
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
SUB
UFITS 128
;; decl: bal
;; get member sender
;; push identifier rpr
PUSH S5
INDEX 0
;; get member duration
;; push identifier rpr
PUSH S6
INDEX 1
;; get member hash
;; push identifier rpr
PUSH S7
INDEX 2
;; push identifier _expiry
PUSH S6
CALLREF {
	CALL $participate_internal_macro$
}
;; decl: res
;; push identifier bal
PUSH S1
;; +
PUSHINT 1000000000
ADD
UFITS 128
PUSHINT 0
RAWRESERVE
;; return
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
TRUE
SETINDEXQ 1
PUSHINT 128
SETINDEXQ 4
SETGLOB 4
;; push identifier rhash
;; push identifier res
PUSH2 S5, S0
BLKDROP2 2, 4
SWAP2
DROP2
; end function participateProxy
; end modifier onlyRoot
BLKDROP2 3, 2
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x00000000000000000000000032e4e9d22_
	STSLICER
	PUSH S2
	STUR 128
	PUSH S1
	STIR 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S2
	STUR 128
	PUSH S1
	STIR 1
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	participate_internal
.type	participate_internal, @function
CALL $participate_internal_macro$

.macro participate_internal_macro
;; param: sender
;; param: duration
;; param: hash
;; param: __expiry
;; ret param: retParam@0
PUSHINT 0
; function participate
PUSHCONT {
	;; push identifier endBid
	GETGLOB 13
	NEQINT 0
	;; short-circuiting ||
	DUP
	PUSHCONT {
		DROP
		;; push identifier duration
		PUSH S3
		GTINT 0
	}
	IFNOT
	THROWIFNOT 104
	;; if
	;; push identifier endBid
	GETGLOB 13
	PUSHCONT {
		; expValue
		; end expValue
		;; push identifier now
		NOW
		; colValue
		SETGLOB 12
		; end colValue
		;; push identifier duration
		PUSH S3
		PUSHINT 4
		MIN
		;; decl: dur
		; expValue
		; end expValue
		;; push identifier start
		GETGLOB 12
		;; +
		PUSHINT 604800
		;; *
		;; push identifier dur
		PUSH S2
		MUL
		UFITS 32
		ADD
		UFITS 32
		; colValue
		; end colValue
		; expValue
		; end expValue
		;; push identifier endBid
		DUP
		SETGLOB 13
		;; +
		PUSHINT 86400
		;; *
		;; push identifier dur
		PUSH S2
		MUL
		UFITS 32
		ADD
		UFITS 32
		; colValue
		; end colValue
		;; push identifier endRev
		DUP
		SETGLOB 14
		;; decl: exp_base
		;; if
		;; push identifier __expiry
		;; >
		;; push identifier exp_base
		PUSH2 S3, S0
		GREATER
		PUSHCONT {
			; expValue
			; end expValue
			;; push identifier __expiry
			; colValue
			DROP
			PUSH S2
			; end colValue
		}
		IF
		;; end if
		;; push identifier exp_base
		;; uint256
		;; +
		;; push identifier duration
		PUSH2 S0, S5
		;; uint256
		;; *
		PUSHINT 31536000
		;; uint256
		MUL
		ADD
		;; decl: _expiry
		;; if
		;; push identifier _expiry
		DUP
		;; >
		PUSHINT 4294967295
		GREATER
		PUSHCONT {
			; expValue
			; end expValue
			; colValue
			DROP
			PUSHINT 4294967295
			; end colValue
		}
		IF
		;; end if
		;; push identifier _expiry
		DUP
		;; uint32
		UFITS 32
		; expValue
		; end expValue
		; colValue
		SETGLOB 15
		; end colValue
		;; emit initialized
		PUSHSLICE xc000000000000000000000000048e64ce7
		NEWC
		STSLICE
		;; start
		;; push identifier start
		GETGLOB 12
		STUR 32
		;; endBid
		;; push identifier endBid
		GETGLOB 13
		STUR 32
		;; endRev
		;; push identifier endRev
		GETGLOB 14
		STUR 32
		;; expiry
		;; push identifier expiry
		GETGLOB 15
		STUR 32
		ENDC
		PUSHINT 0
		SENDRAWMSG
		;; if
		;; push identifier __expiry
		PUSH S4
		GTINT 0
		PUSHCONT {
			; expValue
			; end expValue
			PUSHINT 86400
			; colValue
			SETGLOB 17
			; end colValue
			;; Remote call IDensRoot.ensureExpiry
			;; push identifier root
			GETGLOB 10
			NEWC
			STSLICECONST x62_
			STSLICE
			PUSHSLICE x398968000000000000000000000000000089b81a7f_
			STSLICER
			;; name
			;; push identifier name
			GETGLOB 11
			STREFR
			;; expiry
			;; push identifier exp_base
			PUSH S2
			;; +
			;; push identifier prolongGrace
			GETGLOB 17
			ADD
			UFITS 32
			STUR 32
			ENDC
			PUSHINT 0
			SENDRAWMSG
			; expValue
			; end expValue
			;; push identifier __expiry
			PUSH S4
			; colValue
			SETGLOB 16
			; end colValue
		}
		IF
		;; end if
		BLKDROP 3
	}
	IFNOT
	;; end if
	;; if
	;; push identifier now
	NOW
	;; >=
	;; push identifier endBid
	GETGLOB 13
	GEQ
	PUSHCONT {
		;; return
		DROP
		FALSE
	}
	IFJMP
	;; end if
	NEWDICT
	PUSHINT 0
	NEWC
	STU 256
	PUSHINT 0
	ROT
	PUSHINT 64
	DICTUSETB
	MYADDR
	PUSHINT 1
	ROT
	PUSHINT 64
	DICTUSET
	;; push identifier start
	GETGLOB 12
	NEWC
	STU 32
	PUSHINT 2
	ROT
	PUSHINT 64
	DICTUSETB
	;; push identifier sender
	PUSH S5
	PUSHINT 3
	ROT
	PUSHINT 64
	DICTUSET
	NEWC
	STDICT
	ENDC
	;; push identifier bid_code
	GETGLOB 18
	NEWC
	STSLICECONST x2_
	STOPTREF
	STOPTREF
	STZERO
	ENDC
	DUP
	HASHCU
	NEWC
	STSLICECONST x801_
	STU 256
	ENDC
	CTOS
	PUSHINT 700000000
	PUSH S1
	NEWC
	STSLICECONST x62_
	STSLICE
	SWAP
	STGRAMS
	PUSHSLICE x000000000000000000000000007_
	STSLICER
	PUSH S2
	STREFR
	STSLICECONST x04f0b468c_
	;; hash_val
	;; push identifier hash
	PUSH S5
	STUR 256
	;; end_bid
	;; push identifier endBid
	GETGLOB 13
	STUR 32
	;; end_rev
	;; push identifier endRev
	GETGLOB 14
	STUR 32
	ENDC
	PUSHINT 1
	SENDRAWMSG
	DROP2
	;; emit bid_ev
	PUSHSLICE xc00000000000000000000000001c393650
	NEWC
	STSLICE
	;; sender
	;; push identifier sender
	PUSH S5
	STSLICER
	;; hash
	;; push identifier hash
	PUSH S3
	STUR 256
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; return
	DROP
	TRUE
}
CALLX
; end function participate
BLKDROP2 4, 1

.macro bid
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
; Decode hash
LDUQ 256
PUSHREFCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: hash
; function bid
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
;; >=
PUSHINT 1000000000
GEQ
THROWIFNOT 102
;; return
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
TRUE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
;; get member sender
GETGLOB 9
PUSHINT 0
;; push identifier hash
PUSH S2
PUSHINT 0
CALLREF {
	CALL $participate_internal_macro$
}
; end function bid
NIP
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x00000000000000000000000036770257e_
	STSLICER
	PUSH S1
	STIR 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STIR 1
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	_find_bid_internal
.type	_find_bid_internal, @function
CALL $_find_bid_internal_macro$

.macro _find_bid_internal_macro
;; param: owner
; function _find_bid
NEWDICT
PUSHINT 0
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
MYADDR
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
;; push identifier start
GETGLOB 12
NEWC
STU 32
PUSHINT 2
ROT
PUSHINT 64
DICTUSETB
;; push identifier owner
PUSH S1
PUSHINT 3
ROT
PUSHINT 64
DICTUSET
NEWC
STDICT
ENDC
;; push identifier bid_code
GETGLOB 18
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
;; decl: stateInit
;; return
;; push identifier stateInit
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
NIP
; end function _find_bid
NIP

.macro findBid
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
; Decode bidder
LDMSGADDRQ
PUSHREFCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: bidder
; function findBid
;; return
;; push identifier bidder
DUP
CALLREF {
	CALL $_find_bid_internal_macro$
}
; end function findBid
NIP
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x000000000000000000000000306bd5b9e_
	STSLICER
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STSLICER
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro revealInt
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode owner
LDMSGADDRQ
PUSHREFCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode amount
LDUQ 128
PUSHREFCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: owner
;; param: amount
; function revealInt
PUSHCONT {
	;; get member sender
	GETGLOB 9
	;; push identifier owner
	PUSH S2
	CALLREF {
		CALL $_find_bid_internal_macro$
	}
	SDEQ
	THROWIFNOT 103
	;; get member value
	CALLREF {
		CALL $message_balance_macro$
	}
	;; >
	;; push identifier amount
	PUSH S1
	GREATER
	THROWIFNOT 102
	;; if
	;; push identifier amount
	DUP
	;; <=
	;; push identifier sec_bid_amt
	GETGLOB 24
	LEQ
	PUSHCONT {
		;; Remote call IAddBalance.addBalance
		;; get member sender
		GETGLOB 9
		TRUE
		NEWC
		STSLICECONST x6_
		STI 1
		PUSHINT 3
		STZEROES
		STSLICE
		PUSHSLICE x00000000000000000000000000006347f9a7_
		STSLICER
		ENDC
		PUSHINT 64
		SENDRAWMSG
		;; return
	}
	IFJMP
	;; end if
	;; if
	;; push identifier amount
	DUP
	;; <=
	;; push identifier top_bid_amt
	GETGLOB 21
	LEQ
	PUSHCONT {
		; expValue
		; end expValue
		;; get member sender
		GETGLOB 9
		; colValue
		SETGLOB 23
		; end colValue
		; expValue
		; end expValue
		;; push identifier amount
		DUP
		; colValue
		SETGLOB 24
		; end colValue
		;; emit new_second
		PUSHSLICE xc00000000000000000000000007c6b0ee5
		NEWC
		STSLICE
		;; sender
		;; push identifier sec_bid
		GETGLOB 23
		STSLICER
		;; amount
		;; push identifier sec_bid_amt
		GETGLOB 24
		STUR 128
		ENDC
		PUSHINT 0
		SENDRAWMSG
		;; Remote call IAddBalance.addBalance
		;; get member sender
		GETGLOB 9
		TRUE
		NEWC
		STSLICECONST x6_
		STI 1
		PUSHINT 3
		STZEROES
		STSLICE
		PUSHSLICE x00000000000000000000000000006347f9a7_
		STSLICER
		ENDC
		PUSHINT 64
		SENDRAWMSG
		;; return
	}
	IFJMP
	;; end if
	;; get member balance
	GETPARAM 7
	INDEX 0
	;; -
	;; get member value
	CALLREF {
		CALL $message_balance_macro$
	}
	SUB
	UFITS 128
	;; decl: bal
	;; if
	;; push identifier top_bid_amt
	GETGLOB 21
	PUSHCONT {
		;; Remote call IAddBalance.addBalance
		;; push identifier top_bid_amt
		GETGLOB 21
		;; push identifier top_bid
		GETGLOB 20
		NEWC
		STSLICECONST x62_
		STSLICE
		SWAP
		STGRAMS
		PUSHSLICE x0000000000000000000000000006347f9a7_
		STSLICER
		ENDC
		PUSHINT 0
		SENDRAWMSG
		; expValue
		; end expValue
		;; push identifier top_bid
		GETGLOB 20
		; colValue
		SETGLOB 23
		; end colValue
		; expValue
		; end expValue
		;; push identifier top_bid_amt
		GETGLOB 21
		; colValue
		SETGLOB 24
		; end colValue
		;; emit new_second
		PUSHSLICE xc00000000000000000000000007c6b0ee5
		NEWC
		STSLICE
		;; sender
		;; push identifier sec_bid
		GETGLOB 23
		STSLICER
		;; amount
		;; push identifier sec_bid_amt
		GETGLOB 24
		STUR 128
		ENDC
		PUSHINT 0
		SENDRAWMSG
		;; push identifier top_bid_amt
		; expValue
		; end expValue
		; colValue
		GETGLOB 21
		SUB
		UFITS 128
		; end colValue
	}
	IF
	;; end if
	; expValue
	; end expValue
	;; get member sender
	GETGLOB 9
	; colValue
	SETGLOB 20
	; end colValue
	; expValue
	; end expValue
	;; push identifier amount
	PUSH S1
	; colValue
	SETGLOB 21
	; end colValue
	; expValue
	; end expValue
	;; push identifier owner
	PUSH S2
	; colValue
	SETGLOB 22
	; end colValue
	;; emit new_first
	PUSHSLICE xc00000000000000000000000006dc64a3e
	NEWC
	STSLICE
	;; sender
	;; push identifier top_bid
	GETGLOB 20
	STSLICER
	;; amount
	;; push identifier top_bid_amt
	GETGLOB 21
	STUR 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; emit new_winner
	PUSHSLICE xc00000000000000000000000004674068a
	NEWC
	STSLICE
	;; newwin
	;; push identifier winner
	GETGLOB 22
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; push identifier bal
	;; +
	;; push identifier amount
	PUSH2 S0, S1
	ADD
	UFITS 128
	PUSHINT 0
	RAWRESERVE
	;; emit revealed
	PUSHSLICE xc0000000000000000000000000490a4f0e
	NEWC
	STSLICE
	;; sender
	;; push identifier owner
	PUSH S3
	STSLICER
	;; amount
	;; push identifier amount
	PUSH S2
	STUR 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; transfer()
	;; push identifier owner
	PUSH S2
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHINT 128
	SENDRAWMSG
	DROP
}
CALLX
; end function revealInt
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro finalize
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
ENDS
;; ret param: retParam@0
PUSHINT 0
; function finalize
PUSHCONT {
	;; if
	;; push identifier top_bid_amt
	GETGLOB 21
	EQINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		; function Now
		;; return
		;; push identifier now
		NOW
		; end function Now
		;; >=
		;; push identifier endBid
		GETGLOB 13
		;; +
		;; push identifier prolongGrace
		GETGLOB 17
		ADD
		UFITS 32
		GEQ
	}
	IF
	PUSHCONT {
		;; Remote call IDensRoot.auctionFailed
		;; push identifier root
		GETGLOB 10
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHSLICE x398968000000000000000000000000000013d2b6af_
		STSLICER
		;; name
		;; push identifier name
		GETGLOB 11
		STREFR
		ENDC
		PUSHINT 0
		SENDRAWMSG
		;; emit failed
		PUSHSLICE xc0000000000000000000000000094d3892
		NEWC
		STSLICE
		ENDC
		PUSHINT 0
		SENDRAWMSG
		;; return
		GETGLOB 4
		PUSHINT 0
		SETINDEXQ 2
		TRUE
		SETINDEXQ 1
		PUSHINT 64
		SETINDEXQ 4
		SETGLOB 4
		DROP
		TRUE
	}
	IFJMP
	;; end if
	;; if
	;; push identifier now
	NOW
	;; <
	;; push identifier endRev
	GETGLOB 14
	;; +
	;; push identifier prolongGrace
	GETGLOB 17
	ADD
	UFITS 32
	LESS
	PUSHCONT {
		;; return
		GETGLOB 4
		PUSHINT 0
		SETINDEXQ 2
		TRUE
		SETINDEXQ 1
		PUSHINT 64
		SETINDEXQ 4
		SETGLOB 4
		DROP
		FALSE
	}
	IFJMP
	;; end if
	;; if
	;; push identifier now
	NOW
	;; <
	;; push identifier minfinal
	GETGLOB 16
	;; +
	;; push identifier prolongGrace
	GETGLOB 17
	ADD
	UFITS 32
	LESS
	PUSHCONT {
		;; return
		GETGLOB 4
		PUSHINT 0
		SETINDEXQ 2
		TRUE
		SETINDEXQ 1
		PUSHINT 64
		SETINDEXQ 4
		SETGLOB 4
		DROP
		FALSE
	}
	IFJMP
	;; end if
	ACCEPT
	;; push identifier sec_bid_amt
	GETGLOB 24
	;; decl: paid
	;; if
	;; push identifier sec_bid_amt
	GETGLOB 24
	GTINT 0
	PUSHCONT {
		;; push identifier top_bid_amt
		GETGLOB 21
		;; -
		;; push identifier sec_bid_amt
		GETGLOB 24
		SUB
		UFITS 128
		;; decl: remainder
		; expValue
		; end expValue
		;; push identifier top_bid_amt
		GETGLOB 21
		; colValue
		POP S2
		; end colValue
		;; Remote call IAddBalance.addBalance
		;; push identifier remainder
		DUP
		;; push identifier top_bid
		GETGLOB 20
		TRUE
		NEWC
		STSLICECONST x6_
		STI 1
		PUSHINT 3
		STZEROES
		STSLICE
		SWAP
		STGRAMS
		PUSHSLICE x0000000000000000000000000006347f9a7_
		STSLICER
		ENDC
		PUSHINT 0
		SENDRAWMSG
		DROP
	}
	IF
	;; end if
	;; Remote call IDensRoot.auctionSucceeded
	;; push identifier root
	GETGLOB 10
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x3989680000000000000000000000000000be52392d_
	STSLICER
	;; name
	;; push identifier name
	GETGLOB 11
	STREFR
	;; winner
	;; push identifier winner
	GETGLOB 22
	STSLICER
	;; expiry
	;; push identifier expiry
	GETGLOB 15
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; emit finalized
	PUSHSLICE xc000000000000000000000000059a52eb2
	NEWC
	STSLICE
	;; winner
	;; push identifier winner
	GETGLOB 22
	STSLICER
	;; paid
	;; push identifier paid
	PUSH S1
	STUR 128
	;; expiry
	;; push identifier expiry
	GETGLOB 15
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; return
	GETGLOB 4
	PUSHINT 0
	SETINDEXQ 2
	TRUE
	SETINDEXQ 1
	PUSHINT 64
	SETINDEXQ 4
	SETGLOB 4
	TRUE
	BLKDROP2 1, 2
	SWAP
	DROP
}
CALLX
; end function finalize
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x0000000000000000000000003de06dc2e_
	STSLICER
	PUSH S1
	STIR 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STIR 1
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro destroy
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; modifier onlyRoot
;; get member sender
GETGLOB 9
;; push identifier root
GETGLOB 10
SDEQ
THROWIFNOT 99
; function destroy
;; if
; function Now
;; return
;; push identifier now
NOW
; end function Now
;; >=
;; push identifier endRev
GETGLOB 14
GEQ
PUSHCONT {
	;; Remote call IDensRoot.auctionSink
	;; push identifier root
	GETGLOB 10
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	PUSHSLICE x0000000000000000000000000000c31c9681_
	STSLICER
	ENDC
	PUSHINT 160
	SENDRAWMSG
}
IF
;; end if
; end function destroy
; end modifier onlyRoot
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro c7_to_c4
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
GETGLOB 20
GETGLOB 22
GETGLOB 23
REVERSE 4, 0
STSLICE
STSLICE
STSLICE
GETGLOB 24
NEWC
STU 128
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 14
GETGLOB 15
GETGLOB 16
GETGLOB 17
GETGLOB 18
GETGLOB 19
GETGLOB 21
REVERSE 14, 0
STBREF
STBREF
STSLICE
STREF
STU 32
STU 32
STU 32
STU 32
STU 32
STU 32
STREF
STI 1
STU 128
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDMSGADDR
LDMSGADDR
SETGLOB 23
SETGLOB 22
SETGLOB 20
LDREFRTOS
PLDU 128
SETGLOB 24
LDMSGADDR
LDREF
LDU 32
LDU 32
LDU 32
LDU 32
LDU 32
LDU 32
LDREF
LDI 1
PLDU 128
SETGLOB 21
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDMSGADDR
	LDMSGADDR
	SETGLOB 23
	SETGLOB 22
	SETGLOB 20
	LDREFRTOS
	PLDU 128
	SETGLOB 24
	LDMSGADDR
	LDREF
	LDU 32
	LDU 32
	LDU 32
	LDU 32
	LDU 32
	LDU 32
	LDREF
	LDI 1
	PLDU 128
	SETGLOB 21
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init root
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 10
	; init name
	PUSHREF {
	}
	SETGLOB 11
	; init start
	PUSHINT 0
	SETGLOB 12
	; init endBid
	PUSHINT 0
	SETGLOB 13
	; init endRev
	PUSHINT 0
	SETGLOB 14
	; init expiry
	PUSHINT 0
	SETGLOB 15
	; init minfinal
	PUSHINT 0
	SETGLOB 16
	; init prolongGrace
	PUSHINT 0
	SETGLOB 17
	; init bid_code
	PUSHREF {
	}
	SETGLOB 18
	; init bid_code_fuse
	PUSHINT 0
	SETGLOB 19
	; init top_bid
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 20
	; init top_bid_amt
	PUSHINT 0
	SETGLOB 21
	; init winner
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 22
	; init sec_bid
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 23
	; init sec_bid_amt
	PUSHINT 0
	SETGLOB 24
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
;; param: transaction_type
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
; beg set default params for responsible func
GETGLOB 4
; bounce
TRUE
SETINDEXQ 1
; tons
PUSHINT 10000000
SETINDEXQ 2
; currency
NULL
SETINDEXQ 3
; flag
PUSHINT 0
SETINDEXQ 4
SETGLOB 4
; end set default params for responsible func
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
DUP        ; isEmpty isEmpty
PUSHCONT {
	DROP    ;
	PUSH S1 ; body
	LDUQ 32  ; [funcId] body' ok
	PUSHCONT {
		; body'
		DROP
		CALLREF {
			CALL $fallback_macro$
		}
		THROW 0
	}
	IFNOT
	PUSH S1 ; funcId body' funcId
	EQINT 0 ; funcId body' isZero
	DUP     ; funcId body' isZero isZero
	PUSHCONT {
 		; funcId body' isZero
		BLKDROP2 2, 1; isZero
	}
	IF
}
IFNOT
; [funcId body'] doReceive
IFJMPREF {
	CALL $receive_macro$
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
PUSHCONT {
	DROP2 ; funcId and restSlice
	CALLREF {
		CALL $fallback_macro$
	}
}
IF

.internal-alias :main_external, -1
.internal :main_external
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice havePubkey
	PUSHCONT {
		LDU 256       ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG s3
		SWAP
	}
	PUSHCONT {
		XCHG s2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1      ; havePubkey msgSlice
	SWAP       ; msgSlice havePubkey
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
PUSHCONT {
	DROP2 ; funcId and restSlice
	CALLREF {
		CALL $fallback_macro$
	}
}
IF

.macro root
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 10
PUSHSLICE xc0000000000000000000000000b7295e20
NEWC
STSLICE
PUSH S1
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro name
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 11
PUSHSLICE xc0000000000000000000000000f985b3f4
NEWC
STSLICE
PUSH S1
STREFR
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro start
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 12
PUSHSLICE xc0000000000000000000000000bffcbec1
NEWC
STSLICE
PUSH S1
STUR 32
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro endBid
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 13
PUSHSLICE xc0000000000000000000000000b1c3973f
NEWC
STSLICE
PUSH S1
STUR 32
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro endRev
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 14
PUSHSLICE xc0000000000000000000000000c71ccf4f
NEWC
STSLICE
PUSH S1
STUR 32
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro expiry
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 15
PUSHSLICE xc0000000000000000000000000aa4a77c6
NEWC
STSLICE
PUSH S1
STUR 32
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro minfinal
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 16
PUSHSLICE xc0000000000000000000000000860eeb75
NEWC
STSLICE
PUSH S1
STUR 32
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro prolongGrace
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 17
PUSHSLICE xc00000000000000000000000009d875bf9
NEWC
STSLICE
PUSH S1
STUR 32
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro bid_code
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 18
PUSHSLICE xc0000000000000000000000000e10b6481
NEWC
STSLICE
PUSH S1
STREFR
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro bid_code_fuse
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 19
PUSHSLICE xc000000000000000000000000089e58424
NEWC
STSLICE
PUSH S1
STIR 1
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro top_bid
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 20
PUSHSLICE xc0000000000000000000000000cd07b0fa
NEWC
STSLICE
PUSH S1
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro top_bid_amt
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 21
PUSHSLICE xc0000000000000000000000000e3ca4ac4
NEWC
STSLICE
PUSH S1
STUR 128
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro winner
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 22
PUSHSLICE xc0000000000000000000000000e199a229
NEWC
STSLICE
PUSH S1
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro sec_bid
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 23
PUSHSLICE xc0000000000000000000000000d8e72ee9
NEWC
STSLICE
PUSH S1
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro sec_bid_amt
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 24
PUSHSLICE xc0000000000000000000000000f24f1305
NEWC
STSLICE
PUSH S1
STUR 128
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro public_function_selector
DUP
PUSHINT 834901823
LEQ
PUSHCONT {
	DUP
	PUSHINT 166036516
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 101641077
		EQUAL
		IFJMPREF {
			CALL $minfinal$
		}
		DUP
		PUSHINT 166036516
		EQUAL
		IFJMPREF {
			CALL $bid_code_fuse$
		}
	}
	IFJMP
	DUP
	PUSHINT 629528867
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 495410169
		EQUAL
		IFJMPREF {
			CALL $prolongGrace$
		}
		DUP
		PUSHINT 629528867
		EQUAL
		IFJMPREF {
			CALL $destroy$
		}
	}
	IFJMP
	DUP
	PUSHINT 832830675
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 709523398
		EQUAL
		IFJMPREF {
			CALL $expiry$
		}
		DUP
		PUSHINT 832830675
		EQUAL
		IFJMPREF {
			CALL $addBalance$
		}
	}
	IFJMP
	DUP
	PUSHINT 834901823
	EQUAL
	IFJMPREF {
		CALL $endBid$
	}
}
IFJMP
DUP
PUSHINT 1491545833
LEQ
PUSHCONT {
	DUP
	PUSHINT 1073528513
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 925457952
		EQUAL
		IFJMPREF {
			CALL $root$
		}
		DUP
		PUSHINT 1073528513
		EQUAL
		IFJMPREF {
			CALL $start$
		}
	}
	IFJMP
	DUP
	PUSHINT 1193070415
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1102010087
		EQUAL
		IFJMPREF {
			CALL $findBid$
		}
		DUP
		PUSHINT 1193070415
		EQUAL
		IFJMPREF {
			CALL $endRev$
		}
	}
	IFJMP
	DUP
	PUSHINT 1292349690
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1267967816
		EQUAL
		IFJMPREF {
			CALL $participateProxy$
		}
		DUP
		PUSHINT 1292349690
		EQUAL
		IFJMPREF {
			CALL $top_bid$
		}
	}
	IFJMP
	DUP
	PUSHINT 1491545833
	EQUAL
	IFJMPREF {
		CALL $sec_bid$
	}
}
IFJMP
DUP
PUSHINT 1887733441
LEQ
PUSHCONT {
	DUP
	PUSHINT 1628136577
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1507592543
		EQUAL
		IFJMPREF {
			CALL $bid$
		}
		DUP
		PUSHINT 1628136577
		EQUAL
		IFJMPREF {
			CALL $bid_code$
		}
	}
	IFJMP
	DUP
	PUSHINT 1674201796
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1637458473
		EQUAL
		IFJMPREF {
			CALL $winner$
		}
		DUP
		PUSHINT 1674201796
		EQUAL
		IFJMPREF {
			CALL $top_bid_amt$
		}
	}
	IFJMP
	DUP
	PUSHINT 1756716863
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1699668308
		EQUAL
		IFJMPREF {
			CALL $inquiryRequest$
		}
		DUP
		PUSHINT 1756716863
		EQUAL
		IFJMPREF {
			CALL $constructor$
		}
	}
	IFJMP
	DUP
	PUSHINT 1887733441
	EQUAL
	IFJMPREF {
		CALL $installBidCode$
	}
}
IFJMP
DUP
PUSHINT 2138476741
LEQ
PUSHCONT {
	DUP
	PUSHINT 1917784837
	EQUAL
	IFJMPREF {
		CALL $sec_bid_amt$
	}
	DUP
	PUSHINT 2004989707
	EQUAL
	IFJMPREF {
		CALL $finalize$
	}
	DUP
	PUSHINT 2038805492
	EQUAL
	IFJMPREF {
		CALL $name$
	}
	DUP
	PUSHINT 2138476741
	EQUAL
	IFJMPREF {
		CALL $revealInt$
	}
}
IFJMP
