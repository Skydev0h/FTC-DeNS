.version sol 0.46.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
TRUE
SETGLOB 6
;; end constructor protection
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: _wallet
;; param: _root
; constructor DeNSDebotHelper
; expValue
; end expValue
FALSE
; colValue
SETGLOB 11
; end colValue
; expValue
; end expValue
;; push identifier _wallet
PUSH S1
; colValue
SETGLOB 10
; end colValue
; expValue
; end expValue
;; push identifier _root
; colValue
; end colValue
;; Remote call ID4Root.resolveUser
;; push identifier root
BLKPUSH 2, 0
SETGLOB 13
PUSHSLICE x92614df6bff000000000174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
MYADDR
NEWC
STSLICECONST 0
;; push identifier pubkey
GETGLOB 16
ISNULL
THROWIFNOT 64
PUSHSLICE x000000000000000000000000136451f6000000004_
STSLICER
STSLICE
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end constructor DeNSDebotHelper
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro setPubkey
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: value
; function setPubkey
; expValue
; end expValue
;; push identifier value
; colValue
; end colValue
; end function setPubkey
SETGLOB 16
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro resolveUserCallback
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: user_addr
CALLREF {
	CALL $resolveUserCallback_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	resolveUserCallback_internal
.type	resolveUserCallback_internal, @function
CALL $resolveUserCallback_internal_macro$

.macro resolveUserCallback_internal_macro
;; param: user_addr
; function resolveUserCallback
; expValue
; end expValue
;; push identifier user_addr
DUP
; colValue
SETGLOB 12
; end colValue
PUSHINT 1882391680
;; push identifier user_addr
PUSH S1
CALLREF {
	CALL $Sdk_no_obj_getAccountType_macro$
}
; end function resolveUserCallback
DROP

.macro checkStatus
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDI 8
ENDS
;; param: acc_type
CALLREF {
	CALL $checkStatus_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	checkStatus_internal
.type	checkStatus_internal, @function
CALL $checkStatus_internal_macro$

.macro checkStatus_internal_macro
;; param: acc_type
; function checkStatus
;; if
;; push identifier acc_type
DUP
EQINT -1
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	;; push identifier acc_type
	DUP
	EQINT 0
	;; short-circuiting ||
	DUP
	PUSHCONT {
		DROP
		;; push identifier acc_type
		DUP
		EQINT 2
	}
	IFNOT
}
IFNOT
PUSHCONT {
	; expValue
	; end expValue
	FALSE
	; colValue
	SETGLOB 11
	; end colValue
}
PUSHCONT {
	; expValue
	; end expValue
	TRUE
	; colValue
	SETGLOB 11
	; end colValue
}
IFELSE
;; end if
; end function checkStatus
DROP

.macro createD4User
DROP
ENDS
; function createD4User
ACCEPT
NEWC
STSLICECONST x0fa213df
STSLICECONST x0226adce
ENDC
;; decl: payload
;; transfer()
MYADDR
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x5012a05f200000000000000000000000000003_
STSLICER
;; push identifier payload
PUSH S1
STREFR
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function createD4User
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro deployUserCallback
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: user_addr
CALLREF {
	CALL $deployUserCallback_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	deployUserCallback_internal
.type	deployUserCallback_internal, @function
CALL $deployUserCallback_internal_macro$

.macro deployUserCallback_internal_macro
;; param: user_addr
; function deployUserCallback
; expValue
; end expValue
;; push identifier user_addr
; colValue
; end colValue
; expValue
; end expValue
; colValue
; end colValue
; end function deployUserCallback
SETGLOB 12
TRUE
SETGLOB 11

.macro isD4Userdeployed
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
; function isD4Userdeployed
;; return
;; push identifier d4UserDeployed
GETGLOB 11
; end function isD4Userdeployed
;; emitting 1 value(s)
PUSH S1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x0000000000000000000000003bcd36ce2_
	STSLICER
	STI 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getD4User
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
;; ret param: result
; function getD4User
;; return
;; push identifier d4User
GETGLOB 12
; end function getD4User
;; emitting 1 value(s)
PUSH S1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST x9824e9b7
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro createAuction
DROP
LDREF
LDU 8
ENDS
;; param: name
;; param: duration
; function createAuction
ACCEPT
;; push identifier duration
;; push identifier name
PUSH2 S0, S1
NEWC
STSLICECONST x361ca18f
STREF
STU 8
ENDC
;; decl: payload
;; transfer()
MYADDR
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x5012a05f200000000000000000000000000003_
STSLICER
;; push identifier payload
PUSH S1
STREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function createAuction
BLKDROP 3
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro resolveAuction
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDREF
ENDS
;; param: name
; function resolveAuction
;; Remote call ID4Root.resolveAuction
;; push identifier root
GETGLOB 13
PUSHSLICE x926232d06d3800000000174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
;; push identifier name
PUSH S1
NEWC
STSLICECONST 0
;; push identifier pubkey
GETGLOB 16
ISNULL
THROWIFNOT 64
PUSHSLICE x000000000000000000000000317e8c35800000004_
STSLICER
STREF
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function resolveAuction
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro resolveAuctionCallback
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: auct_addr
CALLREF {
	CALL $resolveAuctionCallback_internal_macro$
}
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	resolveAuctionCallback_internal
.type	resolveAuctionCallback_internal, @function
CALL $resolveAuctionCallback_internal_macro$

.macro resolveAuctionCallback_internal_macro
;; param: auct_addr
; function resolveAuctionCallback
;; push identifier auction
GETGLOB 14
;; push identifier auct_addr
PUSH S1
SDEQ
; end function resolveAuctionCallback
DROP2

.macro getAucAddress
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
;; ret param: result
; function getAucAddress
;; return
;; push identifier auction
GETGLOB 14
; end function getAucAddress
;; emitting 1 value(s)
PUSH S1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST x9b621e9e
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro resolveCert
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDREF
ENDS
;; param: name
; function resolveCert
;; Remote call ID4Root.resolve
;; push identifier root
GETGLOB 13
PUSHSLICE x92618e3c75f000000000174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
;; push identifier root
GETGLOB 13
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
STSLICECONST 0
;; push identifier pubkey
GETGLOB 16
ISNULL
THROWIFNOT 64
PUSHSLICE x00000000000000000000000024c99739000000004_
STSLICER
STU 8
STREF
STSLICE
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function resolveCert
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro resolveCertificateCallback
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: res
CALLREF {
	CALL $resolveCertificateCallback_internal_macro$
}
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	resolveCertificateCallback_internal
.type	resolveCertificateCallback_internal, @function
CALL $resolveCertificateCallback_internal_macro$

.macro resolveCertificateCallback_internal_macro
;; param: res
; function resolveCertificateCallback
;; push identifier certificate
GETGLOB 15
;; push identifier res
PUSH S1
SDEQ
; end function resolveCertificateCallback
DROP2

.macro getCertAddress
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
;; ret param: result
; function getCertAddress
;; return
;; push identifier certificate
GETGLOB 15
; end function getCertAddress
;; emitting 1 value(s)
PUSH S1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST x947750df
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro makeBid
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: b_auction
;; param: b_data
;; param: b_hash
; function makeBid
ACCEPT
;; push identifier b_hash
;; push identifier b_data
;; push identifier b_auction
PUSH3 S0, S1, S2
NEWC
STSLICECONST x24a6aad2
STSLICE
STREF
STU 256
ENDC
;; decl: payload
;; transfer()
;; get member value
DEPTH
ADDCONST -2
PICK
MYADDR
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 1
STUR 107
;; push identifier payload
PUSH S1
STREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function makeBid
BLKDROP 4
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro c7_to_c4
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 6
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STI 1
STSLICE
STI 1
BLKSWAP 5, 1
NEWC
STSLICE
BLKSWAP 4, 1
NEWC
STSLICE
BLKSWAP 3, 1
NEWC
STSLICE
ROTREV
NEWC
STSLICE
STU 256
STBREFR
STBREFR
STBREFR
STBREFR
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDI 1       ; pubkey [timestamp] constructor_flag memory
LDMSGADDR
LDI 1
;; load next cell
LDREF
ENDS
CTOS
LDMSGADDR
;; load next cell
LDREF
ENDS
CTOS
LDMSGADDR
;; load next cell
LDREF
ENDS
CTOS
LDMSGADDR
;; load next cell
LDREF
ENDS
CTOS
LDMSGADDR
LDU 256
ENDS
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; pubkey
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHREFCONT {
	CALL $c4_to_c7$
}
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT   ; D
	; init userMsigWallet
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 10
	; init d4UserDeployed
	PUSHINT 0
	SETGLOB 11
	; init d4User
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 12
	; init root
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 13
	; init auction
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 14
	; init certificate
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 15
	; init pubkey
	PUSHINT 0
	SETGLOB 16
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
;; param: transaction_type
PUSH S2
CTOS
PLDU 4
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60 ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.internal-alias :main_external, -1
.internal :main_external
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice havePubkey
	PUSHCONT {
		LDU 256       ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG s3
		SWAP
	}
	PUSHCONT {
		XCHG s2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1      ; havePubkey msgSlice
	SWAP       ; msgSlice havePubkey
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.globl	Sdk_with_obj_getAccountType
.type	Sdk_with_obj_getAccountType, @function
CALL $Sdk_with_obj_getAccountType_macro$

.macro Sdk_with_obj_getAccountType_macro
;; param: answerId
;; param: addr
; function getAccountType
;; address.makeAddrStd()
PUSHSLICE x9c31f8c8a9f200e593e3eda66275c2c11ec9e940cc18d5d3e858d16d4f3c5437897_
;; decl: a
;; Remote call ISdk.getAccountType
;; push identifier addr
;; push identifier answerId
;; push identifier a
PUSH3 S1, S2, S0
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000003_
STSLICER
ROTREV
NEWC
STSLICECONST x2b885111
STU 32
STSLICE
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function getAccountType
DROP2

.globl	Sdk_no_obj_getAccountType
.type	Sdk_no_obj_getAccountType, @function
CALL $Sdk_no_obj_getAccountType_macro$

.macro Sdk_no_obj_getAccountType_macro
;; param: answerId
;; param: addr
; function getAccountType
;; address.makeAddrStd()
PUSHSLICE x9c31f8c8a9f200e593e3eda66275c2c11ec9e940cc18d5d3e858d16d4f3c5437897_
;; decl: a
;; Remote call ISdk.getAccountType
;; push identifier addr
;; push identifier answerId
;; push identifier a
PUSH3 S1, S2, S0
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000003_
STSLICER
ROTREV
NEWC
STSLICECONST x2b885111
STU 32
STSLICE
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function getAccountType
BLKDROP 3

.macro public_function_selector
DUP
PUSHINT 405072311
LEQ
IFJMPREF {
	DUP
	PUSHINT 19808605
	EQUAL
	IFJMPREF {
		CALL $setPubkey$
	}
	DUP
	PUSHINT 36089294
	EQUAL
	IFJMPREF {
		CALL $deployUserCallback$
	}
	DUP
	PUSHINT 343363807
	EQUAL
	IFJMPREF {
		CALL $getCertAddress$
	}
	DUP
	PUSHINT 405072311
	EQUAL
	IFJMPREF {
		CALL $getD4User$
	}
}
DUP
PUSHINT 835161790
LEQ
IFJMPREF {
	DUP
	PUSHINT 459415198
	EQUAL
	IFJMPREF {
		CALL $getAucAddress$
	}
	DUP
	PUSHINT 614902482
	EQUAL
	IFJMPREF {
		CALL $makeBid$
	}
	DUP
	PUSHINT 700372990
	EQUAL
	IFJMPREF {
		CALL $resolveUserCallback$
	}
	DUP
	PUSHINT 835161790
	EQUAL
	IFJMPREF {
		CALL $resolveCertificateCallback$
	}
}
DUP
PUSHINT 1243403585
LEQ
IFJMPREF {
	DUP
	PUSHINT 907846031
	EQUAL
	IFJMPREF {
		CALL $createAuction$
	}
	DUP
	PUSHINT 1180306855
	EQUAL
	IFJMPREF {
		CALL $resolveAuctionCallback$
	}
	DUP
	PUSHINT 1241152735
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 1243403585
	EQUAL
	IFJMPREF {
		CALL $resolveAuction$
	}
}
DUP
PUSHINT 1882391680
LEQ
IFJMPREF {
	DUP
	PUSHINT 1339546724
	EQUAL
	IFJMPREF {
		CALL $resolveCert$
	}
	DUP
	PUSHINT 1396267835
	EQUAL
	IFJMPREF {
		CALL $createD4User$
	}
	DUP
	PUSHINT 1865734968
	EQUAL
	IFJMPREF {
		CALL $isD4Userdeployed$
	}
	DUP
	PUSHINT 1882391680
	EQUAL
	IFJMPREF {
		CALL $checkStatus$
	}
}
